import random

def objective_function(x):
    """Example objective function to be optimized."""
    return -(x**2)  
def hill_climbing(max_iterations=1000):
    """Hill climbing algorithm."""
    current_solution = random.uniform(-10, 10) 
    current_value = objective_function(current_solution)

    for _ in range(max_iterations):
        neighbor_solution = current_solution + random.uniform(-1, 1) 
        neighbor_value = objective_function(neighbor_solution)

        if neighbor_value > current_value:
            current_solution = neighbor_solution
            current_value = neighbor_value

    return current_solution, current_value

if __name__ == "__main__":
    best_solution, best_value = hill_climbing()
    print(f"Best solution: {best_solution}")
    print(f"Objective value at best solution: {best_value}")
